"""
Django settings for FruitShop project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from datetime import timedelta

from celery.schedules import crontab

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(gi-s8(xmj)d#ih0t^@446u-sz^*qu*b!i=7ig^=6i8yl=2^3w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "*"
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'FruitGP2.apps.Fruitgp2Config',
    'django_celery_results',
    'rest_framework',
    'FruitServer.apps.FruitserverConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'FruitShop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FruitShop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'Fruit',
        'USER':'root',
        'PASSWORD':'xu1026472254',
        'HOST':'localhost',
        'PORT':'3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

USER_TOKEN_TIMEOUT = 60*60*24*7



CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
        "CLIENT_CLASS": "django_redis.client.DefaultClient",
                    }
                }
        }

EMAIL_HOST = "smtp.163.com"
EMAIL_PORT=465

EMAIL_HOST_USER = '17852361001@163.com'
EMAIL_HOST_PASSWORD = 'xu1026472254'
EMAIL_USE_SSL= True
CELERY_BROKER_URL= 'redis://127.0.0.1:6379/0'
CELERY_ACCEPT_CONTENT= ['json']
CELERY_RESULT_BACKEND =  'django-db'
CELERY_TASK_SERIALIZER= 'json'

ALIPAY_PUBLIC_KEY = open(os.path.join(BASE_DIR, "alipay/alipay_rsa_public_key.pem")).read()
APP_PRIVATE_KEY = open(os.path.join(BASE_DIR, "alipay/app_rsa_private_key.pem")).read()
ALIPAY_APPID = "2016091800537304"

LOGGING = {
   'version': 1,
   'disable_existing_loggers': True,
   'formatters': {
   'standard': {
    'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'
   },
       'gp2_formatter':{
      'format': '%(levelname)s - %(asctime)s - %(message)s'
    }
   },
   'filters': {
   'require_debug_false': {
    '()': 'django.utils.log.RequireDebugFalse',
    }
   },
   'handlers': {
   'null': {
    'level': 'DEBUG',
    'class': 'logging.NullHandler',
   },
   'mail_admins': {
    'level': 'DEBUG',
    'class': 'django.utils.log.AdminEmailHandler',
    'filters': ['require_debug_false'],
   },
   'debug': {
    'level':'DEBUG',
    'class':'logging.handlers.RotatingFileHandler',
    'filename': os.path.join(BASE_DIR, "log",'debug.log'), #文件路径
    'maxBytes':1024*1024*5,
    'backupCount': 10,
    'formatter':'standard',
   },
   'console':{
    'level': 'DEBUG',
    'class': 'logging.StreamHandler',
    'formatter': 'standard',
   },
    'gp2_handler':{
        'level': 'DEBUG',
        'class': 'logging.handlers.RotatingFileHandler',
        'filename': os.path.join(BASE_DIR, "log", 'gp2.txt'),  # 文件路径
        'maxBytes': 1024 * 1024 * 5,
        'backupCount': 10,
        'formatter':'gp2_formatter'
    }
   },
   'loggers': {
   'django': {
    'handlers': ['console'],
    'level': 'DEBUG',
    'propagate': False
   },
   'django.request': {
    'handlers': ['debug'],
    'level': 'ERROR',
    'propagate': True,#是否继承父类的log信息
   },
   "gp2_learn":{
       'handlers':['console','gp2_handler'],
       'level':'DEBUG'
   }
   }
  }

